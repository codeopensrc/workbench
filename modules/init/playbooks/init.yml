---
- name: INIT
  hosts: all
  remote_user: root
  gather_facts: false
  vars:
    aws_bot_access_key: "{{ aws_bot_access_key }}"
    aws_bot_secret_key: "{{ aws_bot_secret_key }}"
    do_spaces_region: "{{ do_spaces_region }}"
    do_spaces_access_key: "{{ do_spaces_access_key }}"
    do_spaces_secret_key: "{{ do_spaces_secret_key }}"
  tasks:
    # Temporarily disable for initial install - can lock dkpg file if enabled
    - name: temp disable autoupgrade
      replace:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: '"1"'
        replace: '"0"'

    - name: aws credentials
      copy:
        dest: "/root/.aws/credentials"
        content: |
          [default]
          aws_access_key_id = {{ aws_bot_access_key }}
          aws_secret_access_key = {{ aws_bot_secret_key }}
      when: aws_bot_access_key != ""

    - name: add aws mc alias
      command: mc alias set s3 https://s3.amazonaws.com {{ aws_bot_access_key }} {{ aws_bot_secret_key }}
      when: aws_bot_access_key != ""

    - name: add do mc alias
      command: mc alias set spaces https://{{ do_spaces_region }}.digitaloceanspaces.com {{ do_spaces_access_key }} {{ do_spaces_secret_key }}
      when: do_spaces_access_key != ""

    - name: check cli tools
      stat:
        path: "$HOME/code/cli-config"
      register: file_data

    - name: download cli tools
      shell: |
        curl -L clidot.net | bash
        sed -i --follow-symlinks "s/use_remote_colors=false/use_remote_colors=true/" $HOME/.tmux.conf
      when: not file_data.stat.exists

- name: CHANGE HOSTNAME
  hosts: all
  remote_user: root
  vars:
    server_name_prefix: "{{ server_name_prefix }}"
    region: "{{ region }}"
    hostname: "{{ hostname }}"
    root_domain_name: "{{ root_domain_name }}"
    cluster_admin_hostname: "{{ (groups.admin + groups.lead) | first }}"
    control_plane_endpoint: "{{ hostvars[cluster_admin_hostname].private_ip }}"
  tasks:
    - name: change hostname
      command: sudo hostnamectl set-hostname {{ ("admin" in machine_name) | ternary(hostname, machine_name) }}

    - name: add hostname
      lineinfile:
        path: /etc/hosts
        regexp: '.*{{ server_name_prefix }}-{{ region }}.*'
        line: '127.0.1.1 {{ ("admin" in machine_name) | ternary(hostname, root_domain_name) }} {{ machine_name }}'

    - name: add public_ip alias
      lineinfile:
        path: /etc/hosts
        regexp: '^{{ inventory_hostname }} {{ root_domain_name }} {{ ("admin" in machine_name) | ternary(hostname, machine_name) }}'
        line: '{{ inventory_hostname }} {{ root_domain_name }} {{ ("admin" in machine_name) | ternary(hostname, machine_name) }}'

    - name: add private_ip alias
      lineinfile:
        path: /etc/hosts
        regexp: '^{{ private_ip }} vpc.my_private_ip'
        line: '{{ private_ip }} vpc.my_private_ip'

    - name: add kube controlplane endpoint alias
      lineinfile:
        path: /etc/hosts
        regexp: '^{{ control_plane_endpoint }} kube-cluster-endpoint'
        line: '{{ control_plane_endpoint }} kube-cluster-endpoint'
