---
- name: INIT
  hosts: all
  remote_user: root
  gather_facts: false
  vars:
    aws_bot_access_key: "{{ aws_bot_access_key }}"
    aws_bot_secret_key: "{{ aws_bot_secret_key }}"
    do_spaces_region: "{{ do_spaces_region }}"
    do_spaces_access_key: "{{ do_spaces_access_key }}"
    do_spaces_secret_key: "{{ do_spaces_secret_key }}"
    az_storageaccount: "{{ az_storageaccount }}"
    az_storagekey: "{{ az_storagekey }}"
    az_gateway: "{{ az_minio_gateway | default('localhost', true) }}"
    az_gateway_port: "{{ az_minio_gateway_port | default('31900', true) }}"
  tasks:
    # Temporarily disable for initial install - can lock dkpg file if enabled
    - name: temp disable autoupgrade
      replace:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: '"1"'
        replace: '"0"'

    - name: aws credentials
      copy:
        dest: "/root/.aws/credentials"
        content: |
          [default]
          aws_access_key_id = {{ aws_bot_access_key }}
          aws_secret_access_key = {{ aws_bot_secret_key }}
      when: aws_bot_access_key != ""

    - name: add aws mc alias
      command: mc alias set s3 https://s3.amazonaws.com {{ aws_bot_access_key }} {{ aws_bot_secret_key }}
      when: aws_bot_access_key != ""

    - name: add do mc alias
      command: mc alias set spaces https://{{ do_spaces_region }}.digitaloceanspaces.com {{ do_spaces_access_key }} {{ do_spaces_secret_key }}
      when: do_spaces_access_key != ""

    ##TODO: Ultimately probably move to rclone over mc
    ##NOTE: Kubernetes minio-s3-gateway service launched in later steps
    - name: create tmp azure-s3 gateway
      block:
        - name: check alias added
          command: mc alias list azure
          changed_when: false
      rescue:
        - name: start gateway
          shell: |
            docker stop azure-s3
            docker run -d --rm -p {{ az_gateway_port }}:9000 --name azure-s3 \
              -e "MINIO_ROOT_USER={{ az_storageaccount }}" \
              -e "MINIO_ROOT_PASSWORD={{ az_storagekey }}" \
              minio/minio:RELEASE.2021-12-27T07-23-18Z gateway azure
      when: az_storageaccount != ""

    - name: add azure mc alias
      command: mc alias set azure http://{{ az_gateway }}:{{ az_gateway_port}} {{ az_storageaccount }} {{ az_storagekey }}
      when: az_storageaccount != ""

    - name: check cli tools
      stat:
        path: "$HOME/code/cli-config"
      register: file_data

    - name: download cli tools
      shell: |
        curl -L https://raw.githubusercontent.com/codeopensrc/os-cli-config/master/setup.sh | bash
        sed -i --follow-symlinks "s/use_remote_colors=false/use_remote_colors=true/" $HOME/.tmux.conf
      when: not file_data.stat.exists



- name: CHANGE HOSTNAME
  hosts: all
  remote_user: root
  gather_facts: false
  vars:
    server_name_prefix: "{{ server_name_prefix }}"
    region: "{{ region }}"
    hostname: "{{ hostname }}"
    root_domain_name: "{{ root_domain_name }}"
  tasks:
    ## Hoping this fixes random 'gather_facts' not working/timing out
    - name: gather facts task
      retries: 3
      setup:
        gather_timeout: 5

    - name: check using hostname
      set_fact:
        use_hostname: true
      with_items:
        - "admin"
        - root_domain_name
      when: "item in machine_name"

    - name: change hostname
      command: sudo hostnamectl set-hostname {{ (use_hostname is defined) | ternary(hostname, machine_name) }}

    - name: add hostname
      lineinfile:
        path: /etc/hosts
        regexp: '^127.0.1.1'
        line: '127.0.1.1 {{ (use_hostname is defined) | ternary(hostname, root_domain_name) }} {{ machine_name }}'

    - name: add public_ip alias
      lineinfile:
        path: /etc/hosts
        regexp: '^{{ inventory_hostname }} {{ root_domain_name }} {{ (use_hostname is defined) | ternary(hostname, machine_name) }}'
        line: '{{ inventory_hostname }} {{ root_domain_name }} {{ (use_hostname is defined) | ternary(hostname, machine_name) }}'

    - name: add private_ip alias
      lineinfile:
        path: /etc/hosts
        regexp: '^{{ private_ip }} vpc.my_private_ip'
        line: '{{ private_ip }} vpc.my_private_ip'

