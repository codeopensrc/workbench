## Lot less templating for general and more specific for now

- name: LAUNCH MISC APPS
  hosts: "{{ groups.lead | first }}"
  remote_user: root
  vars:
    apps: "{{ kube_apps | from_json }}"
    root_domain_name: "{{ root_domain_name }}"
    tmp_remote_values_dir: "/root/.kube"
  tasks:
    - name: install consule prerequisites
      pip:
        name:
          - python-consul

    - name: get wekan oauth app_id
      community.general.consul_kv:
        key: wekan/app_id
      register: wekan_app_id
      when: "'wekan' in (apps | list)"

    - name: get wekan oauth secret
      community.general.consul_kv:
        key: wekan/secret
      register: wekan_secret
      when: "'wekan' in (apps | list)"

    - name: add values files
      template:
        src: "ansiblefiles/helm_values/{{ item.1 }}"
        dest: "{{ tmp_remote_values_dir }}/{{ item.1 }}"
      loop: "{{ query('dict', apps) | subelements('value.opt_value_files') }}"
      when: item.0.value.enabled

    - name: git clone repos
      git:
        repo: "{{ item.value.repo_url }}"
        dest: "/root/repos/{{ item.value.repo_name }}"
      loop: "{{ query('dict', apps) }}"
      when: "item.value.repo_url != '' and item.value.enabled"

    - name: rm disabled git repos
      file:
        path: "/root/repos/{{ item.value.repo_name }}"
        state: absent
      loop: "{{ query('dict', apps) }}"
      when: "item.value.repo_url != '' and not item.value.enabled"

    - name: deploy charts with repo_url defined
      kubernetes.core.helm:
        state: "{{ item.value.enabled | ternary('present', 'absent') }}"
        name: "{{ item.value.release_name }}"
        chart_ref: "/root/repos/{{ item.value.repo_name }}/{{ item.value.chart_ref }}"
        namespace: "{{ item.value.namespace }}"
        create_namespace: "{{ item.value.create_namespace | default(true) }}"
        wait: "{{ item.value.wait | default(300) }}"
        values_files: "{{ item.value.opt_value_files | map('regex_replace', '^(.*)', tmp_remote_values_dir+'/\\1') | list }}"
      loop: "{{ query('dict', apps) }}"
      when: "item.value.repo_url != ''"


    - name: deploy charts with chart_url defined
      kubernetes.core.helm:
        state: "{{ item.value.enabled | ternary('present', 'absent') }}"
        name: "{{ item.value.release_name }}"
        chart_ref: "{{ item.value.chart_ref }}"
        chart_repo_url: "{{ item.value.chart_url }}"
        namespace: "{{ item.value.namespace }}"
        create_namespace: "{{ item.value.create_namespace | default(true) }}"
        chart_version: "{{ item.value.chart_version | default('latest') }}"
        wait: "{{ item.value.wait | default(300) }}"
        values_files: "{{ item.value.opt_value_files | map('regex_replace', '^(.*)', tmp_remote_values_dir+'/\\1')) | list }}"
      loop: "{{ query('dict', apps) }}"
      when: "item.value.chart_url != ''"

    - name: rm values file
      file:
        path: "{{ tmp_remote_values_dir }}/{{ item.1 }}"
        state: absent
      loop: "{{ query('dict', apps) | subelements('value.opt_value_files') }}"


#    - name: Deploy example chart
#      kubernetes.core.helm:
#        name: example
#        chart_ref: example
#        chart_repo_url: "{{ apps['example'].chart_url }}"
#        namespace: monitoring
#        create_namespace: true
#        chart_version: "{{ apps['example'].chart_version }}"
#        wait: true
#        values_files:
#          - /root/.kube/example-values.yaml
